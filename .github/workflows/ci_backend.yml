# .github/workflows/ci.yml
name: Actix CI & Docker Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Run Tests
      run: cargo test --all

    - name: Build release binary
      run: cargo build --release

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Docker image
      run: |
        docker build -t $REGISTRY/${{ env.IMAGE_NAME }}:latest .

    - name: Push Docker image
      run: |
        docker push $REGISTRY/${{ env.IMAGE_NAME }}:latest

    - name: Notify on Success (Discord)
      if: success()
      uses: Ilshidur/action-discord@master
      with:
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        message: |
          ‚úÖ CI passed and Docker image pushed for ${{ github.repository }}!

    - name: Notify on Failure (Discord)
      if: failure()
      uses: Ilshidur/action-discord@master
      with:
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        message: |
          ‚ùå CI failed for ${{ github.repository }}! Check logs.
    - name: Telegram notify
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          üöÄ Actix Web CI passed for ${{ github.repository }}!

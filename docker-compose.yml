services:
  backend:
    build:
      dockerfile: ./Dockerfile
      context: ./api/
    env_file: ./api/.env
    networks: # isolate all networks so an attacker cannot escalate
      - db_link
      - s3_link
      - redis_link
      - external
    depends_on:
      - redis
      - postgresql
      - minio
    labels:
      # Enable Traefik for this service
      - traefik.enable=true
      - traefik.docker.network=traefik
      # Define a router for the API on a subdomain
      - traefik.http.routers.etherbeing_backend.rule=Host(`etherbeing.cd.godjango.dev`)
      - traefik.http.routers.etherbeing_backend.entrypoints=web,websecure
      # Define the service to hit port 8080 inside the container
      - traefik.http.services.etherbeing_backend.loadbalancer.server.port=8080
  frontend:
    build:
      dockerfile: ./Dockerfile
      context: ./web/
    env_file: ./web/.env
    labels:
      # Enable Traefik for this service
      - traefik.enable=true
      - traefik.docker.network=traefik
      # Define a router for the main domain
      - traefik.http.routers.etherbeing_frontend.rule=Host(`www.etherbeing.cd.godjango.dev`)
      - traefik.http.routers.etherbeing_frontend.entrypoints=web,websecure
      - traefik.http.services.etherbeing_minio.loadbalancer.passHostHeader=true
      # Define the service to hit port 80 inside the container
      - traefik.http.services.etherbeing_frontend.loadbalancer.server.port=3000
    networks:
      - external
  redis:
    image: redis:latest
    env_file: ./.env.redis
    networks:
      - redis_link
  postgresql:
    image: postgres:latest
    restart: unless-stopped
    # set shared memory limit when using docker compose
    shm_size: 128mb
    env_file: ./.env.postgres
    networks:
      - db_link
  minio:
    image: quay.io/minio/minio:latest
    restart: unless-stopped
    env_file: ./.env.s3
    volumes:
      - s3_storage:/data
    ports:
      - 9000:9000
      - 9001:9001
    command: server /data --console-address ":9001"
    networks:
      - s3_link
      - external
    labels:
      # Enable Traefik for MinIO Console UI (Port 9001)
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.etherbeing_minio.rule=Host(`s3.etherbeing.cd.godjango.dev`)
      - traefik.http.routers.etherbeing_minio.entrypoints=web,websecure
      - traefik.http.services.etherbeing_minio.loadbalancer.passHostHeader=true
      # Route to the console port (9001)
      - "traefik.http.services.etherbeing_minio.loadbalancer.server.port=9001"

networks:
  default:
  db_link:
  s3_link:
  redis_link:
  external: # Set external to false in case you don't need this for example you aren't using traefik
    external: true
    name: traefik
volumes:
  s3_storage:
  postgres_storage:
  redis_storage:
